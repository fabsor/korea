{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./node_modules/core-js/modules/es6.string.small.js"],"names":["Post","styled","article","props","theme","media","small","large","Image","div","Content","section","maxWidth","PostContent","PostTitle","h2","PostDate","time","colors","accent","title","description","data","allMarkdownRemark","edges","map","node","key","id","frontmatter","image","fluid","childImageSharp","to","fields","slug","date","excerpt","query","createHTML","this"],"mappings":"2eAOA,IAAMA,EAAOC,IAAOC,QAAV,kEAAGD,CAAH,qNASJ,SAACE,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,MAA5B,MAID,SAACH,GAAD,OAAWA,EAAMC,MAAMC,MAAME,MAA5B,OAODC,EAAQP,IAAOQ,IAAV,mEAAGR,CAAH,oDAQLS,EAAUT,IAAOU,QAAV,qEAAGV,CAAH,iCACI,SAACE,GAAD,OAAWA,EAAMC,MAAMQ,WAIlCC,EAAcZ,IAAOQ,IAAV,yEAAGR,CAAH,2CAQXa,EAAYb,IAAOc,GAAV,uEAAGd,CAAH,yBAITe,EAAWf,IAAOgB,KAAV,sEAAGhB,CAAH,8BAEH,SAACE,GAAD,OAAWA,EAAMC,MAAMc,OAAOC,SAS1B,mBAAChB,GAAD,OACX,gBAAC,IAAD,KACA,gBAAC,IAAD,CAAKiB,MAAM,QAAQC,YAAY,0BAC/B,gBAACX,EAAD,KACCP,EAAMmB,KAAKC,kBAAkBC,MAAMC,IAAI,gBAAGC,EAAH,EAAGA,KAAH,OACpC,gBAAC1B,EAAD,CAAM2B,IAAKD,EAAKE,IACdF,EAAKG,YAAYC,MACjB,gBAACtB,EAAD,KACI,gBAAC,IAAD,CAAKuB,MAAOL,EAAKG,YAAYC,MAAME,gBAAgBD,SAEvD,KACE,gBAAClB,EAAD,KACI,gBAACC,EAAD,KACI,gBAAC,IAAD,CAAMmB,GAAIP,EAAKQ,OAAOC,MACrBT,EAAKG,YAAYT,QAGtB,gBAACJ,EAAD,KAAWU,EAAKG,YAAYO,MAC5B,yBAAIV,EAAKW,gBAQlB,IAAMC,EAAQ,c,iCCvFrB,EAAQ,IAAR,CAA0B,QAAS,SAAUC,GAC3C,OAAO,WACL,OAAOA,EAAWC,KAAM,QAAS,GAAI","file":"component---src-pages-index-tsx-31626f7481b1eb35a8e4.js","sourcesContent":["import * as React from \"react\"\nimport styled from \"styled-components\";\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Img from \"gatsby-image\"\n\nconst Post = styled.article`\n    display: flex;\n    flex-direction: column;\n    margin: 0 20px;\n    margin-bottom: 20px;\n    background: #fff;\n    box-shadow: 8px 14px 38px rgba(39,44,49,.06),1px 3px 8px rgba(39,44,49,.03);\n    transition: all .5s ease;    \n    border-radius: 7px;\n    ${(props) => props.theme.media.small`\n      max-height: 400px;\n      flex-direction: row;\n    `};\n    ${(props) => props.theme.media.large`\n      margin-left: auto;\n      margin-right: auto;\n    `}\n\n`;\n\nconst Image = styled.div`\n    margin-right: 30px;\n    flex: 2;\n    img {\n      margin-bottom: 0;\n    }\n`;\n\nconst Content = styled.section`\n    max-width: ${(props) => props.theme.maxWidth}px;\n    margin: auto;\n`;\n\nconst PostContent = styled.div`\n    flex: 1;\n    padding: 10px;\n    h2 a {\n      color: #000;\n    }\n`;\n\nconst PostTitle = styled.h2`\n  margin-bottom: .1em;   \n`\n\nconst PostDate = styled.time`\n  font-size: .8em;\n  color: ${(props) => props.theme.colors.accent};\n`;\n\ninterface IIndexProps {\n    data: {\n        allMarkdownRemark: any;\n    }\n}\n\nexport default (props: IIndexProps) => (\n    <Layout>\n    <SEO title=\"Index\" description=\"This is a description\" />\n    <Content>\n    {props.data.allMarkdownRemark.edges.map(({ node }) => (\n        <Post key={node.id}>\n        { node.frontmatter.image ?\n          <Image>\n              <Img fluid={node.frontmatter.image.childImageSharp.fluid}  />\n          </Image>\n        : null }\n            <PostContent>\n                <PostTitle>\n                    <Link to={node.fields.slug}>\n                    {node.frontmatter.title}\n                    </Link>\n                </PostTitle>\n                <PostDate>{node.frontmatter.date}</PostDate>\n                <p>{node.excerpt}</p>\n            </PostContent>\n        </Post>\n    ))}\n    </Content>\n    </Layout>\n);\n\nexport const query = graphql`\n    query {\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n            totalCount\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        date(formatString: \"Y-MM-DD\")\n                        image {\n                            childImageSharp {\n                                fluid(maxHeight: 400) {\n                                    ...GatsbyImageSharpFluid\n                                }\n                            }\n                        }                    \n                    }\n                    fields {\n                        slug\n                    }               \n                    excerpt\n                }\n            }\n        }\n    }\n`\n","'use strict';\n// B.2.3.11 String.prototype.small()\nrequire('./_string-html')('small', function (createHTML) {\n  return function small() {\n    return createHTML(this, 'small', '', '');\n  };\n});\n"],"sourceRoot":""}